Index: src/target/classes/archetype-resources/src/main/java/App.java
===================================================================
diff --git a/src/target/classes/archetype-resources/src/main/java/App.java b/src/main/java/ParentAdminApplication/App.java
rename from src/target/classes/archetype-resources/src/main/java/App.java
rename to src/main/java/ParentAdminApplication/App.java
--- a/src/target/classes/archetype-resources/src/main/java/App.java	(revision 2b36acde70a47c0b265ad73267fc7c7d1b9deb10)
+++ b/src/main/java/ParentAdminApplication/App.java	(date 1744151107723)
@@ -1,4 +1,4 @@
-package $org.example;
+package ParentAdminApplication;
 
 /**
  * Hello world!
Index: src/main/java/ParentAdminApplication/PupilJsonService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ParentAdminApplication;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\nimport org.springframework.stereotype.Component;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.time.LocalDate;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Objects;\n\n@Component\npublic class PupilJsonService {\n\n    private final ObjectMapper ObjectMapper;\n    private final ObjectMapper objectMapper;\n\n    public PupilJsonService(ObjectMapper objectMapper) {\n    this.ObjectMapper = new ObjectMapper();\n    this.ObjectMapper.registerModule(new JavaTimeModule());\n    this.ObjectMapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        this.objectMapper = objectMapper;\n    }\n\n    public List<Pupil> readPupils() throws IOException {\n        File file = new File(\"pupils.json\");\n        if (!file.exists()) return new ArrayList<>();\n        return ObjectMapper.readValue(file, new TypeReference<List<Pupil>>() {});\n        }\n\n    public Pupil findPupilbyNameAndDob(String pupilName, LocalDate dob) {\n        try {\n            File file = new File(\"pupils.json\");\n            if (!file.exists()) return null;\n\n            List<Pupil> pupils = objectMapper.readValue(file, new TypeReference<List<Pupil>>() {});\n\n            for (Pupil pupil : pupils){\n                if (Objects.equals(pupil.getName(), pupilName) && pupil.getDob().equals(dob)){\n                    return pupil;\n                }\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        return null;\n    }\n}\n
===================================================================
diff --git a/src/main/java/ParentAdminApplication/PupilJsonService.java b/src/main/java/ParentAdminApplication/PupilJsonService.java
--- a/src/main/java/ParentAdminApplication/PupilJsonService.java	(revision 2b36acde70a47c0b265ad73267fc7c7d1b9deb10)
+++ b/src/main/java/ParentAdminApplication/PupilJsonService.java	(date 1744219314750)
@@ -9,6 +9,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.time.LocalDate;
+import java.time.LocalTime;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Objects;
Index: .idea/SoftwareGroupAssignment.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\" />\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
===================================================================
diff --git a/.idea/SoftwareGroupAssignment.iml b/.idea/SoftwareGroupAssignment.iml
--- a/.idea/SoftwareGroupAssignment.iml	(revision 2b36acde70a47c0b265ad73267fc7c7d1b9deb10)
+++ b/.idea/SoftwareGroupAssignment.iml	(date 1744141501620)
@@ -2,7 +2,9 @@
 <module type="JAVA_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java/Methods" isTestSource="false" />
+    </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
